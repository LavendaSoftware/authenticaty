require "test_helper"

class SessionsControllerTest < ActionDispatch::IntegrationTest
  setup do
    @<%= singular_table_name %> = <%= table_name %>(:lazaro_nixon)
  end

  test "should get index" do
    sign_in_as @<%= singular_table_name %>

    get sessions_url
    assert_response :success
  end

  test "should get new" do
    get sign_in_url
    assert_response :success
  end

  test "should sign in" do
    post sign_in_url, params: { email: @<%= singular_table_name %>.email, password: "secret123" }
    assert_redirected_to root_url

    get root_url
    assert_response :success
  end

  test "should not sign in with wrong credentials" do
    post sign_in_url, params: { email: @<%= singular_table_name %>.email, password: "wrong_password" }
    assert_redirected_to sign_in_url(email_hint: @<%= singular_table_name %>.email)
    assert_equal "Invalid email or password", flash[:alert]

    get root_url
    assert_redirected_to sign_in_path
  end

  test "should sign out" do
    sign_in_as @<%= singular_table_name %>

    delete session_url(@<%= singular_table_name %>.sessions.last)
    assert_redirected_to sessions_path

    follow_redirect!
    assert_redirected_to sign_in_path
  end

  def sign_in_as(<%= singular_table_name %>)
    post(sign_in_url, params: { email: <%= singular_table_name %>.email, password: "secret123" }); user
  end
end
