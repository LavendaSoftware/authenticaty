class ApplicationController < ActionController::Base
  before_action :set_current_request_details
  before_action :authenticate
  <%- if options.sudoable? %>
  def require_sudo
    unless Current.session.sudo?
      redirect_to new_sessions_sudo_path(proceed_to_url: request.url)
    end
  end
  <%- end -%>
  <%- if options.lockable? %>
  def self.lock_on(actions, wait: 1.minute, attempts: 1000, &block)
    before_action(only: actions) do
      counter = Kredis.counter("lock_on:#{request.remote_ip}:#{params[:controller]}:#{params[:action]}", expires_in: wait)
      counter.increment

      if counter.value > attempts
        instance_exec(&block)
      end
    end
  end
  <%- end -%>

  private
    def authenticate
      if session = Session.find_by_id(cookies.signed[:session_token])
        Current.session = session
      else
        redirect_to sign_in_path
      end
    end

    def set_current_request_details
      Current.user_agent = request.user_agent
      Current.ip_address = request.ip
    end
end
