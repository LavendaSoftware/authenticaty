class EmailVerificationsController < ApplicationController
  before_action :set_<%= singular_table_name %>, only: :update

  def create
    IdentityMailer.with(<%= singular_table_name %>: Current.<%= singular_table_name %>).email_verify_confirmation.deliver_later
  end

  def update
    if Current.<%= singular_table_name %>.email == params[:email]
      @<%= singular_table_name %>.update! verified: true
    else
      render json: { error: "That email verification link is invalid" }, status: :bad_request
    end
  end

  private
    def set_<%= singular_table_name %>
      @<%= singular_table_name %> = <%= class_name %>.find_signed!(params[:token], purpose: params[:email])
    rescue ActiveSupport::MessageVerifier::InvalidSignature
      render json: { error: "That email verification link is invalid" }, status: :bad_request
    end
end
