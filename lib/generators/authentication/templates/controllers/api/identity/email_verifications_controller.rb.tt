class Identity::EmailVerificationsController < ApplicationController
  skip_before_action :authenticate, only: :edit

  before_action :set_<%= singular_table_name %>, only: :edit

  def edit
    @<%= singular_table_name %>.update! verified: true
  end

  def create
    IdentityMailer.with(<%= singular_table_name %>: Current.<%= singular_table_name %>).email_verify_confirmation.deliver_later
  end

  private
    def set_<%= singular_table_name %>
    <%- if code_verifiable? -%>
      @<%= singular_table_name %> = <%= class_name %>.find_by(email: params[:email])

      unless @<%= singular_table_name %> && @<%= singular_table_name %>.verification_code.value == params[:token]
        render json: { error: "That email verification code is invalid" }, status: :bad_request
      end
    <%- else -%>
      @<%= singular_table_name %> = <%= class_name %>.where(email: params[:email]).find_signed!(params[:token], purpose: params[:email])
    rescue
      render json: { error: "That email verification link is invalid" }, status: :bad_request
    <%- end -%>
  end
end
